#!/bin/bash
# Check Lab 5 home directory
# 
# v<num>='<lab section title> <ls option> <ls arg> <f|d> <pathname> <ok|not> ...'
# c<num>=<what to look for when grading>
# 

dir=cis90
homedirname=${LOGNAME%90}   # Strip 90 off the end

if [ "$1" == "" ]; then 
	home=/home/$dir/$homedirname
else
	home=/home/$dir/$1
fi

home=$HOME
cd $home

v1='Making-Directories-Step-2 F .  d edits ok d docs ok d etc ok'
c1="You should see edits, docs, etc directories"

v2='Making-Directories-Step-3 dl class/labs d class/labs ok'
c2="You should see class/labs directory"

v3='Making-Directories-Step-4 dl class/tests d class/tests ok'
c3="You should see class/tests directory"

v4='Renaming-Files-Step-1 F . d misc ok d Miscellaneous not'
c4="You should see misc, not Miscellaneous directory"

v5='Renaming-Files-Step-2 F . d poems ok d Poems not'
c5="You should see poems, not Poems directory"

v6='Renaming-Files-Step-3 F . f docs/MarkTwain ok f proposal1 not'
c6="You should see MarkTwain (in docs), and no proposal1 in home dir"

v7='Moving-Files-Steps-1,2,3 l docs f docs/MarkTwain ok f docs/magna_carta ok f proposal2 not'
c7="You should see: magna_carta, MarkTwain in docs, no proposal2 in home dir"

v8='Moving-Files-Step-4 l bin f bin/datecal ok f timecal not'
c8="You should see datecal in bin and no timecal in home dir"

v9='Moving-Files-Step-5 l docs f docs/policy ok f proposal3 not'
c9="You should see policy in docs, and no propsal3 in home dir"

v10='Moving-Files-Step-6 l poems/Anon f poems/Anon/ant ok f poems/Anon/nursery ok f poems/Anon/twister ok'
c10="You should see ant, nursery, twister in Anon"

v11='Moving-Files-Step-7 l edits f edits/small_town ok f edits/spellk ok f edits/text.err ok f edits/text.fxd ok'
c11="You should see small_town, spellk, text.err, text.fxd in edits"

v12='Moving-Files-Steps-9,10 l letter f letter ok'
c12="You should see letter file in home dir"

v13='Moving-Files-Step-11 F . f misc/what_am_i ok f etc/motd ok f edits/better_town ok'
c13="You should see what_am_i in misc, motd in etc, better_town in edits"

v14='Copying-Files-Step-2 l etc f etc/hosts ok'
c14="You should see hosts in etc"


v15='Copying-Files-Step-3 l class/labs f class/labs/lab01.graded ok f class/labs/lab02.graded ok f class/labs/lab03.graded ok f class/labs/lab04.graded ok'
c15="You should see some graded labs (if submitted) in class/labs"

v16='Copying-Files-Step-4 F poems/Shakespeare f poems/Shakespeare/sonnet6 ok'
c16="You should see sonnet6 in Shakespeare"

v17='Removing-Files-Step-2 F . f empty not'
c17="You should NOT see empty file"

v18='Removing-Files-Step-3 F . f letter.bak not'
c18="You should NOT see letter.bak file"

v19='Removing-Files-Steps-4,5,6 F . d Lab2.0 not'
c19="You should NOT see Lab2.0 directory"

v20='Removing-Files-Step-7 F . d Lab2.1 not'
c20="You should NOT see Lab2.1"

v21='Removing-Files-Step-8 F poems d poems/Sonnets not'
c21="You should NOT see Sonnets in poems"

v22='Linking-Files-Step-1 li bigfile f bigfile ok f ../depot/bigfile ok'
c22="You should see both bigfile files hard linked (same inode) owned by rsimms"

v23='Linking-Files-Step-2 li etc f etc/greeting ok f etc/motd ok'
c23="You should see greeting hard linked to motd (same inode)"

for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14  16 17 18 19 20 21
do
	line=$(eval "echo \${$(echo v${i})}");
	comment=$(eval "echo \${$(echo c${i})}");
	set $(echo $line)
	
	step=$1
	clear
	echo " "; echo "================================"; echo $step; echo " "
	shift
        option=$1
	shift
        show=$1
        echo Output from ls -$option $show follows:
        ls -$option $show
        shift
	echo " "
	while [ ! $1 = "" ] 
	do	
		type=$1
		shift
		file=$home/$1
		shift
		todo=$1
		if [ $type = "d" ]; then
			if [ -d $file ]; then
				echo -n Directory $file was found
				if [ $todo = "ok" ]; then
					echo " --- OK ---"
				else	
					echo " --- Fix ---"
				fi
			else
				echo -n Directory $file was NOT found
				if [ $todo = "not" ]; then
					echo " --- OK ---"
				else	
					echo " --- Fix ---"
				fi
			fi
		else
			if [ -f $file ]; then
				echo -n File $file was found
				if [ $todo = "ok" ]; then
					echo " --- OK ---"
				else	
					echo " --- Fix ---"
				fi
			else
				echo -n File $file was NOT found
				if [ $todo = "not" ]; then
					echo " --- OK ---"
				else	
					echo " --- Fix ---"
				fi
			fi
		fi
        	shift
	done
	echo " "; echo $comment
	read -p "Continue?" buffer
done
clear

temptar=$(mktemp /tmp/files-$USER-XXXXXX.tar)
tar -cf $temptar * 1>/dev/null 2>&1
echo "=============================================================="
echo Submit this tar file on Canvas\!
echo "=============================================================="
echo ""
echo "I have created a tar file of your home directory in: "
echo "" 
echo $temptar
echo ""

exit

